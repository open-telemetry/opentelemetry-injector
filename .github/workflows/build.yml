name: build

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  build-package:
    runs-on: ${{ matrix.ARCH == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      matrix:
        SYS_PACKAGE: [ "deb", "rpm" ]
        ARCH: [ "amd64", "arm64"]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: mlugg/setup-zig@8d6198c65fb0feaa111df26e6b467fea8345e46f # v2.0.5
        with:
          # maintenance note: This version needs to be kept in sync with the version referenced in the file /zig-version
          # in the root of the repository.
          version: 0.14.1

      - name: lint source code
        run: |
          make lint

      - name: Run Zig unit tests
        run: make zig-unit-tests ARCH=${{ matrix.ARCH }}

      - name: Run Injector integration tests
        run: make injector-integration-tests-for-one-architecture ARCH=${{ matrix.ARCH }}

      # TODO I think we should split the build-package job at this point. Everything above is independent of SYS_PACKAGE.
      # In particular the make injector-integration-tests-for-one-architecture ARCH=${{ matrix.ARCH }} step is not
      # super cheap and right now we are running it twice for each CPU arch, once for deb and once for rpm, although
      # it is independent of SYS_PACKAGE. The remaining steps below should be a separate job (named build-and-upload
      # package) and the steps above should be a job named run-tests or verify or something like that.
      # However, I'll leave that to a separate follow up PR.

      - name: Build ${{ matrix.ARCH }} ${{ matrix.SYS_PACKAGE }} package
        run: make ${{ matrix.SYS_PACKAGE }}-package ARCH="${{ matrix.ARCH }}"

      # TODO This seems to be a no-op currently? GH actions says:
      #   "Warning: No files were found with the provided path: ./dist/*.deb. No artifacts will be uploaded."
      # I think the path should be instrumentation/dist/*.${{ matrix.SYS_PACKAGE }} instead.
      # But it is unclear to me why we upload the packages.
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: otelinject-${{ matrix.ARCH }}-${{ matrix.SYS_PACKAGE }}
          path: ./dist/*.${{ matrix.SYS_PACKAGE }}

  packaging-integration-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        SYS_PACKAGE: [ "deb", "rpm" ]
        lang: [ "java" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      # TODO we currently build the RPM and DEB for at least once CPU architectures twice, once in the build-package job
      # in the step "Build ${{ matrix.ARCH }} ${{ matrix.SYS_PACKAGE }} package", and once here in the context of
      # running the packacking integration tests. We should run the packaging integration tests for both CPU
      # architectures (instead of only amd64), but ideally only build each combination of CPU arch & SYS_PACKAGE once.
      - name: Run packaging integration tests for ${{ matrix.SYS_PACKAGE }}/${{ matrix.lang }}
        run: make packaging-integration-test-${{ matrix.SYS_PACKAGE }}-${{ matrix.lang }}
